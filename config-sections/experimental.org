#+TITLE: Experimental

* =corfu and co.=
#+begin_src emacs-lisp :results none
(use-package corfu-doc
  :config
  (setq corfu-doc-delay 0.1
        corfu-doc-max-width 80
        corfu-doc-max-height 40))

(use-package corfu
  :config
  (setq corfu-cycle t
    corfu-auto t
    corfu-auto-prefix 2
    corfu-auto-delay 0.1
    corfu-separator ?\s
    corfu-quit-at-boundary nil
    corfu-quit-no-match t
    corfu-preview-current nil
    corfu-preselect-first t
    corfu-on-exact-match nil
    corfu-echo-documentation t
    corfu-scroll-margin 5)
  (map! :map corfu-map
    "C-SPC" #'completion-at-point
    "C-j" #'corfu-next
    "C-k" #'corfu-previous
    "C-l" #'corfu-insert
    "C-;" #'corfu-doc-toggle
    "TAB" #'corfu-insert
    "ESC" #'corfu-reset)
  :init
  (corfu-global-mode +1)
  (corfu-doc-mode +1))

(use-package kind-icon
  :ensure t
  :after corfu
  :custom
  (kind-icon-default-face 'corfu-default) ; to compute blended backgrounds correctly
  :config
  (add-to-list 'corfu-margin-formatters #'kind-icon-margin-formatter))

;; Optionally use the `orderless' completion style. See `+orderless-dispatch'
;; in the Consult wiki for an advanced Orderless style dispatcher.
;; Enable `partial-completion' for files to allow path expansion.
;; You may prefer to use `initials' instead of `partial-completion'.
(use-package orderless
  :init
  ;; Tune the global completion style settings to your liking!
  ;; This affects the minibuffer and non-lsp completion at point.
  (setq completion-styles '(orderless partial-completion)
    completion-category-defaults nil
    completion-category-overrides nil))

(use-package lsp-mode
  :init
  (defun my/lsp-mode-setup-completion ()
    (setf (alist-get 'styles (alist-get 'lsp-capf completion-category-defaults))
      '(orderless)))
  :hook
  (lsp-completion-mode . my/lsp-mode-setup-completion)
  (lsp-mode . (lambda () (lsp-completion-mode +1)))
  :config
  ;; We use Corfu!
  (setq lsp-completion-provider :none))

;; Add extensions
(use-package cape
  :init
  ;; Add `completion-at-point-functions', used by `completion-at-point'.
  (add-to-list 'completion-at-point-functions #'cape-file)
  (add-to-list 'completion-at-point-functions #'cape-tex)
  (add-to-list 'completion-at-point-functions #'cape-dabbrev)
  (add-to-list 'completion-at-point-functions #'cape-keyword)
  ;;(add-to-list 'completion-at-point-functions #'cape-sgml)
  ;;(add-to-list 'completion-at-point-functions #'cape-rfc1345)
  ;;(add-to-list 'completion-at-point-functions #'cape-abbrev)
  ;;(add-to-list 'completion-at-point-functions #'cape-ispell)
  ;;(add-to-list 'completion-at-point-functions #'cape-dict)
  ;;(add-to-list 'completion-at-point-functions #'cape-symbol)
  ;;(add-to-list 'completion-at-point-functions #'cape-line)
  )
#+end_src
